#include <stdio.h>
#include <stdlib.h>

struct Node
{
  int data;
  struct Node *next;
  struct Node *prev;
};

struct Node* insertEnd(struct Node* head, int data)
{
  struct Node* node = (struct Node*) malloc(sizeof(struct Node));
  struct Node *last = head;
  node->data  = data;                      //  Insert data in new node
  node->next = NULL;                      // link new node to NULL as it is last node
  if (head == NULL)                      // if list is empty add in beginning.
  {
    head = node;
    node->prev=NULL;
    return head;
  }
  while (last->next != NULL)              // Find the last node
    last = last->next;
  last->next = node;                    // Add the node after the last node of list
  node->prev=last;
  return head;
}

void printList(struct Node *node)
{
  while (node != NULL)
  {
    printf("%d ", node->data);
    node = node->next;
  }
}

void deleteNode(struct Node* head_ref, struct Node* del) 
{ 
    
    if (head_ref == NULL || del == NULL) 
        return; 

    if (head_ref == del) 
        head_ref = del->next; 
  
    
    if (del->next != NULL) 
        del->next->prev = del->prev; 
  
    if (del->prev != NULL) 
        del->prev->next = del->next; 
  
    free(del); 
} 

struct Node* removeDupsDLL(struct Node* head)
{ if (head == NULL) 
        return NULL; 
  
    struct Node* current = head; 
    struct Node* next; 
  
    while (current->next != NULL) { 
  
        if (current->data == current->next->data)       
            deleteNode(head, current->next); 
  
        else
            current = current->next; 
    } 
return head;
}

int main()
{
  int t;
  scanf("%d",&t);
  while(t--)
  {
    struct Node* head = NULL;
    struct Node* t1;
    int n, m;
    scanf("%d", &n);
    while(n--)
    {
      scanf("%d", &m);
      head = insertEnd(head, m);
    }
    t1 = removeDupsDLL(head);
    printList(t1);
    printf("\n");
  }
  return 0;
}

